const express = require("express")
const bodyParser = require("body-parser")
const {NmapScan} = require("node-nmap")
const { exec } = require('child_process');
const { error } = require("console");
const { stderr, stdout } = require("process");
const app = express()
const port = 3000
app.use(bodyParser.urlencoded({extended: true}));
app.use(bodyParser.json())
app.get("/", (req,res)=>{
    res.json("HELLo")
})
app.post('/nmap', (req, res) => {
    const { target, options } = req.body;
    if(!target){
      return res.status(400).send("Target is required");
    }
    const cmd = `nmap ${options || '-sT'} ${target}`;
    exec(cmd, (error, stdout, stderr)=>{
      if (error) {
        console.error(`exec error: ${error}`);
        return res.status(500).json({ error: error.message });
      }
  
      if (stderr) {
        console.error(`stderr: ${stderr}`);
        return res.status(500).json({ error: stderr });
      }
  
      // Send the output as the response
      res.json({ output: stdout });
    })
});

app.post('/sqli', (req, res)=>{
  const { target } = req.body;

  if (!target) {
    return res.status(400).send('Target is required');
  }

  // Default script if none provided
  const scriptToRun = 'http-sql-injection';
  const command = `nmap --script=${scriptToRun} ${target}`;

  // Execute the Nmap command
  exec(command, (error, stdout, stderr) => {
    if (error) {
      console.error(`exec error: ${error}`);
      return res.status(500).json({ error: error.message });
    }

    if (stderr) {
      console.error(`stderr: ${stderr}`);
      return res.status(500).json({ error: stderr });
    }

    // Send the output as the response
    res.json({ output: stdout });
  });
})

app.listen(port, ()=>{
    console.log("API IS RUNNING ON http://localhost:3000")
})