const express = require("express");
const bodyParser = require("body-parser");
const { exec } = require("child_process");
const app = express();
const port = 3000;

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

// Define the scriptRunner function to execute Nmap scripts
function scriptRunner(script, target, res) {
  if (!target) {
    return res.status(400).json({ message: "Specify Target" });
  }
  const command = `nmap --script=${script} ${target}`;

  // Execute the Nmap command
  exec(command, (error, stdout, stderr) => {
    if (error) {
      console.error(`exec error: ${error}`);
      return res.status(500).json({ error: error.message });
    }

    if (stderr) {
      console.error(`stderr: ${stderr}`);
      return res.status(500).json({ error: stderr });
    }

    // Send the output as the response
    res.json({ output: stdout });
  });
}

// Endpoint for general Nmap scans
app.post("/nmap", (req, res) => {
  const { target, options } = req.body;
  if (!target) {
    return res.status(400).send("Target is required");
  }
  const cmd = `nmap ${options || "-sT"} ${target}`;
  exec(cmd, (error, stdout, stderr) => {
    if (error) {
      console.error(`exec error: ${error}`);
      return res.status(500).json({ error: error.message });
    }

    if (stderr) {
      console.error(`stderr: ${stderr}`);
      return res.status(500).json({ error: stderr });
    }

    // Send the output as the response
    res.json({ output: stdout });
  });
});

// Endpoint for SQL Injection scan
app.post("/sqli", (req, res) => {
  const { target } = req.body;
  scriptRunner("http-sql-injection", target, res);
});

// Endpoint for XSS scan
app.post("/xss-stored", (req, res) => {
  const { target } = req.body;
  scriptRunner("http-stored-xss", target, res);
});

// Start the Express server
app.listen(port, () => {
  console.log(`API IS RUNNING ON http://localhost:${port}`);
});
